name: checks
on: [pull_request, workflow_dispatch]

env:
  ACT_OWNER: ${{ github.repository_owner }}
  ACT_REPOSITORY: ${{ github.repository }}
  CACHED_DOCKER_IMAGES: '"node:12-buster" "node:12-buster-slim" "ubuntu:18.04" "ubuntu:latest" "alpine:3.10" "tonistiigi/binfmt:latest"'
  CACHED_DOCKER_IMAGES_KEY: docker-images-0
  GO_VERSION: 1.17

jobs:
  PR-Comment:
    runs-on: ubuntu-latest
    steps:
    # - uses: actions/checkout@v2
    # - name: Create
    #   uses: actions/github-script@v2
    #   with:
    #     github-token: ${{secrets.GITHUB_TOKEN}}
    #     script: |
    #       github.issues.createComment({
    #         issue_number: ${{ github.event.number }},
    #         owner: context.repo.owner,
    #         repo: context.repo.repo,
    #         body: 'Etapa de E2E Teste: 1'
    #       })
    - uses: actions/checkout@v2
    - name: Update
      uses: actions/github-script@v2
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const {data: comments }  = await github.issues.listComments({
            issue_number: ${{ github.event.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
          });

          const commentQA = list.find(comment => comment.body.includes("Etapa de E2E Teste"))

          if(commentQA) {
            const number = Number(commentQA.body.split(":")[1]) + 1;
            github.issues.updateComment({
              issue_number: ${{ github.event.number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: ${{ commentQA.id }},
              body: 'Etapa de E2E Teste: ${{number}}'
            })
          }


